// Generated by CoffeeScript 1.7.1
(function() {
  var tpl, tpl1, tpl2;

  tpl = '<div data-bind="text:text">\n</div>\n<p data-bind="text:content"></p>\n<p>this is inline {{content}} bind.<input data-bind="value:content"/><input value="disabled" data-bind=\'attr:{"disabled": "content"}\' /></p>\n<p>this is inline {{it.content}} bind and {{content}} bind.</p>\n<p data-bind="if:showIt"><span data-bind="text:it.content"></span><span data-bind="text:showIt"></span> is true</p>';

  tpl1 = '<div data-bind="foreach:people">this is {{content}}  and {{name}}.<p data-bind="text:content"></p><p data-bind="text:name"></p><div data-bind="foreach:pens"><p data-bind="text:color"></p></div></div>';

  tpl2 = '<div data-bind="text:it.text">\n</div>\n<p data-bind="text:it.content"></p>\n<p data-bind="text:it.content"></p>\n<p data-bind="text:that.content"></p>';

  window.onload = function() {
    var test1, test2, test3;
    test1 = function() {
      var domTpl, o;
      domTpl = Backbone.tinywings(tpl);
      domTpl.appendTo(document.body);
      o = {
        text: 'something like this',
        content: 'more',
        showIt: false,
        it: {
          content: 'it.content'
        }
      };
      return domTpl.render(o);
    };
    test2 = function() {
      var domTpl1, o;
      domTpl1 = Backbone.tinywings(tpl1);
      domTpl1.appendTo(document.body);
      o = {
        people: [
          {
            content: 'xxx',
            name: 'yyyy',
            pens: []
          }, {
            content: 'xxx',
            name: 'yyy',
            pens: []
          }
        ]
      };
      return domTpl1.render(o);
    };
    test3 = function() {
      var domTpl, o;
      domTpl = Backbone.tinywings(tpl2);
      domTpl.appendTo(document.body);
      o = {
        it: {
          text: 'it.xxxx',
          content: 'it.xxxxxx'
        },
        that: {
          content: 'that.xxxxx'
        }
      };
      return domTpl.render(o);
    };
    test1();
    test2();
    return test3();
  };

}).call(this);
